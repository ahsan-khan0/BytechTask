{"ast":null,"code":"const initialState = {\n  counter: 0\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    default:\n      return state;\n  }\n};\nexport default counterReducer;","map":{"version":3,"names":["initialState","counter","counterReducer","state","arguments","length","undefined","action","type"],"sources":["/Users/mbpro/Desktop/Practice/React Project/task1/src/redux/reducers.js"],"sourcesContent":["const initialState = {\n  counter: 0,\n};\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QACL,GAAGL,KAAK;QACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAG;MAC3B,CAAC;IACH,KAAK,WAAW;MACd,OAAO;QACL,GAAGE,KAAK;QACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAG;MAC3B,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}